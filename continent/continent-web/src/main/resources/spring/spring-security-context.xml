<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<context:annotation-config />



	<tx:annotation-driven transaction-manager="transactionManager" />

	

	
		<security:authentication-manager id="authenticationManager">
	   <security:authentication-provider>
	   <security:password-encoder ref="passwordEncoder"/>
		<security:jdbc-user-service data-source-ref="dataSource"
 
		   users-by-username-query=" 
		     SELECT login , password ,estado FROM users WHERE login=?
		     " 	      
		   authorities-by-username-query=" 
		    SELECT u.login,r.role FROM users u , user_roles ur  , roles r
 			WHERE u.login=?
			 and ur.user_id=u.id
 			 and r.id=ur.role_id" 
 
		/>
	   </security:authentication-provider>
	</security:authentication-manager>
	
	<security:http
			realm="Protected API"
			use-expressions="true"
			auto-config="false"
			create-session="stateless"
			entry-point-ref="unauthorizedEntryPoint"
			authentication-manager-ref="authenticationManager">
		<security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
		<security:intercept-url pattern="/rest/user/authenticate" access="permitAll" />
		<security:intercept-url pattern="/rest/userAuth/**" access="permitAll" />
		<security:intercept-url method="GET" pattern="/rest/**" access="hasRole('Operador')" />
		<security:intercept-url method="GET" pattern="/rest/**" access="hasRole('Administrador')" />
		<security:intercept-url method="PUT" pattern="/rest/**" access="hasRole('Administrador')" />
		<security:intercept-url method="POST" pattern="/rest/**" access="hasRole('Administrador')" />
		<security:intercept-url method="DELETE" pattern="/rest/**" access="hasRole('Administrador')" />
	</security:http>


	<bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder">
		<constructor-arg value="ThisIsASecretSoChangeMe" />
	</bean>
	
	<bean id="unauthorizedEntryPoint" class="com.continent.web.rest.security.auth.UnauthorizedEntryPoint" />

	<bean class="com.continent.web.rest.security.auth.AuthenticationTokenProcessingFilter" id="authenticationTokenProcessingFilter">
<!-- 		<constructor-arg ref="userDao" /> -->
	</bean>

</beans>